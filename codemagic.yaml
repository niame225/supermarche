# codemagic.yaml - Build Android APK signé pour production

workflows:
  android-release-workflow:
    name: Build Signed APK - Supermarché App
    max_build_duration: 60
    instance_type: mac_mini_m1

    environment:
      # 🔑 Référence au keystore configuré dans Codemagic UI
      android_signing:
        - supermarche_release_keystore  # ← DOIT correspondre au nom donné dans l'UI

      flutter: stable
      vars:
        FLUTTER_VERSION: "3.19.0"
        JAVA_HOME: /Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true

    scripts:
      # ÉTAPE 1 : Configuration Android
      - name: Set up local.properties
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
          echo "flutter.sdk=$FLUTTER_ROOT" >> "$CM_BUILD_DIR/android/local.properties"

      # ÉTAPE 2 : Nettoyage et dépendances
      - name: Flutter clean & pub get
        script: |
          flutter clean
          flutter pub get

      # ÉTAPE 3 : Vérification v2 embedding (optionnel mais utile)
      - name: Ensure Android v2 embedding
        script: |
          MAIN_ACTIVITY="android/app/src/main/kotlin/$(grep -r "package " android/app/src/main/AndroidManifest.xml | head -1 | sed 's/.*package="//' | sed 's/".*//')/MainActivity.kt"
          if [ -f "$MAIN_ACTIVITY" ]; then
            if ! grep -q "io.flutter.embedding.android.FlutterActivity" "$MAIN_ACTIVITY"; then
              echo "❌ ERREUR : MainActivity non compatible v2 embedding."
              exit 1
            fi
          fi

      # ÉTAPE 4 : Build APK signé (release)
      - name: Build Signed Release APK
        script: |
          echo "🚀 Construction de l'APK signé..."
          flutter build apk --release --verbose

          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "❌ Échec : APK non généré."
            exit 1
          fi

          echo "✅ APK signé créé :"
          ls -lh build/app/outputs/flutter-apk/app-release.apk

      # ÉTAPE 5 : Info de build
      - name: Generate build info
        script: |
          cat > build_info.txt << EOF
          ========================================
          BUILD INFORMATION
          ========================================
          Date: $(date '+%Y-%m-%d %H:%M:%S')
          Flutter: $(flutter --version | head -n1)
          Commit: $CM_COMMIT
          Branch: $CM_BRANCH
          Build #: $CM_BUILD_NUMBER
          ========================================
          EOF
          cat build_info.txt

    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build_info.txt

    publishing:
      email:
        recipients:
          - niame225@gmail.com
        notify:
          success: true
          failure: true